<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BtqczklPTwZ+gA1SVwR+Pr0hzbKpkFaz+rd+c7pPsjMkwIar3wAfkmpjmLoc3A0cWt3OS7VmwANTbSUN
        AN/iEumo9GvpFemM9KXUDSxavr6QTk+/n+pL3ZHpoAQAU6u13+sqwS3TbVOtMVBLBN9NC+1/pfq3+IFU
        W/vWctAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKyii1zkPwGeE2DoM8xR+wAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>